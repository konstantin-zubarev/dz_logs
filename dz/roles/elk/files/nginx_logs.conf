input {
  beats {
    port => 5044
  }
}

filter {
  if [service] == "access" {
    grok {
      match => { "message" => ["%{IPORHOST:[access][remote_ip]} - %{DATA:[access][user_name]} \[%{HTTPDATE:[access][time]}\] \"%{WORD:[access][method]} %{DATA:[access][url]} HTTP/%{NUMBER:[access][http_version]}\" %{NUMBER:[access][response_code]} %{NUMBER:[access][body_sent][bytes]} \"%{DATA:[access][referrer]}\" \"%{DATA:[access][agent]}\""] }
      remove_field => "message"
    }
    mutate {
      add_field => { "read_timestamp" => "%{@timestamp}" }
    }
    date {
      match => [ "[access][time]", "dd/MMM/YYYY:H:m:s Z" ]
      remove_field => "[access][time]"
    }
    useragent {
      source => "[access][agent]"
      target => "[access][user_agent]"
      remove_field => "[access][agent]"
    }
    geoip {
      source => "[access][remote_ip]"
      target => "[access][geoip]"
    }
  }
  else if [service] == "error" {
    grok {
      match => { "message" => ["%{DATA:[error][time]} \[%{DATA:[error][level]}\] %{NUMBER:[error][pid]}#%{NUMBER:[error][tid]}: (\*%{NUMBER:[error][connection_id]} )?%{GREEDYDATA:[error][message]}"] }
      remove_field => "message"
    }
    mutate {
      rename => { "@timestamp" => "read_timestamp" }
    }
    date {
      match => [ "[error][time]", "YYYY/MM/dd H:m:s" ]
      remove_field => "[error][time]"
    }
  }
}

output {
  elasticsearch {
    hosts => "localhost:9200"
    index => "nginx-%{+YYYY.MM.dd}"
  }
}